// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package myfirstmodule.proxies;

public class Uploaddocument
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject uploaddocumentMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "MyFirstModule.Uploaddocument";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		document("document"),
		Uploaddocument_FileDocument("MyFirstModule.Uploaddocument_FileDocument"),
		Uploaddocument_Image("MyFirstModule.Uploaddocument_Image"),
		Uploaddocument_Image_2("MyFirstModule.Uploaddocument_Image_2");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Uploaddocument(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected Uploaddocument(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject uploaddocumentMendixObject)
	{
		if (uploaddocumentMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, uploaddocumentMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.uploaddocumentMendixObject = uploaddocumentMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Uploaddocument.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static myfirstmodule.proxies.Uploaddocument initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return myfirstmodule.proxies.Uploaddocument.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static myfirstmodule.proxies.Uploaddocument initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new myfirstmodule.proxies.Uploaddocument(context, mendixObject);
	}

	public static myfirstmodule.proxies.Uploaddocument load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return myfirstmodule.proxies.Uploaddocument.initialize(context, mendixObject);
	}

	public static java.util.List<myfirstmodule.proxies.Uploaddocument> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> myfirstmodule.proxies.Uploaddocument.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * Commit the changes made on this proxy object.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of document
	 */
	public final java.lang.String getdocument()
	{
		return getdocument(getContext());
	}

	/**
	 * @param context
	 * @return value of document
	 */
	public final java.lang.String getdocument(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.document.toString());
	}

	/**
	 * Set value of document
	 * @param document
	 */
	public final void setdocument(java.lang.String document)
	{
		setdocument(getContext(), document);
	}

	/**
	 * Set value of document
	 * @param context
	 * @param document
	 */
	public final void setdocument(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String document)
	{
		getMendixObject().setValue(context, MemberNames.document.toString(), document);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of Uploaddocument_FileDocument
	 */
	public final system.proxies.FileDocument getUploaddocument_FileDocument() throws com.mendix.core.CoreException
	{
		return getUploaddocument_FileDocument(getContext());
	}

	/**
	 * @param context
	 * @return value of Uploaddocument_FileDocument
	 * @throws com.mendix.core.CoreException
	 */
	public final system.proxies.FileDocument getUploaddocument_FileDocument(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		system.proxies.FileDocument result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Uploaddocument_FileDocument.toString());
		if (identifier != null) {
			result = system.proxies.FileDocument.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of Uploaddocument_FileDocument
	 * @param uploaddocument_filedocument
	 */
	public final void setUploaddocument_FileDocument(system.proxies.FileDocument uploaddocument_filedocument)
	{
		setUploaddocument_FileDocument(getContext(), uploaddocument_filedocument);
	}

	/**
	 * Set value of Uploaddocument_FileDocument
	 * @param context
	 * @param uploaddocument_filedocument
	 */
	public final void setUploaddocument_FileDocument(com.mendix.systemwideinterfaces.core.IContext context, system.proxies.FileDocument uploaddocument_filedocument)
	{
		if (uploaddocument_filedocument == null) {
			getMendixObject().setValue(context, MemberNames.Uploaddocument_FileDocument.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.Uploaddocument_FileDocument.toString(), uploaddocument_filedocument.getMendixObject().getId());
		}
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of Uploaddocument_Image
	 */
	public final system.proxies.Image getUploaddocument_Image() throws com.mendix.core.CoreException
	{
		return getUploaddocument_Image(getContext());
	}

	/**
	 * @param context
	 * @return value of Uploaddocument_Image
	 * @throws com.mendix.core.CoreException
	 */
	public final system.proxies.Image getUploaddocument_Image(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		system.proxies.Image result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Uploaddocument_Image.toString());
		if (identifier != null) {
			result = system.proxies.Image.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of Uploaddocument_Image
	 * @param uploaddocument_image
	 */
	public final void setUploaddocument_Image(system.proxies.Image uploaddocument_image)
	{
		setUploaddocument_Image(getContext(), uploaddocument_image);
	}

	/**
	 * Set value of Uploaddocument_Image
	 * @param context
	 * @param uploaddocument_image
	 */
	public final void setUploaddocument_Image(com.mendix.systemwideinterfaces.core.IContext context, system.proxies.Image uploaddocument_image)
	{
		if (uploaddocument_image == null) {
			getMendixObject().setValue(context, MemberNames.Uploaddocument_Image.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.Uploaddocument_Image.toString(), uploaddocument_image.getMendixObject().getId());
		}
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of Uploaddocument_Image_2
	 */
	public final system.proxies.Image getUploaddocument_Image_2() throws com.mendix.core.CoreException
	{
		return getUploaddocument_Image_2(getContext());
	}

	/**
	 * @param context
	 * @return value of Uploaddocument_Image_2
	 * @throws com.mendix.core.CoreException
	 */
	public final system.proxies.Image getUploaddocument_Image_2(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		system.proxies.Image result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Uploaddocument_Image_2.toString());
		if (identifier != null) {
			result = system.proxies.Image.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of Uploaddocument_Image_2
	 * @param uploaddocument_image_2
	 */
	public final void setUploaddocument_Image_2(system.proxies.Image uploaddocument_image_2)
	{
		setUploaddocument_Image_2(getContext(), uploaddocument_image_2);
	}

	/**
	 * Set value of Uploaddocument_Image_2
	 * @param context
	 * @param uploaddocument_image_2
	 */
	public final void setUploaddocument_Image_2(com.mendix.systemwideinterfaces.core.IContext context, system.proxies.Image uploaddocument_image_2)
	{
		if (uploaddocument_image_2 == null) {
			getMendixObject().setValue(context, MemberNames.Uploaddocument_Image_2.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.Uploaddocument_Image_2.toString(), uploaddocument_image_2.getMendixObject().getId());
		}
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return uploaddocumentMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final myfirstmodule.proxies.Uploaddocument that = (myfirstmodule.proxies.Uploaddocument) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return entityName;
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
